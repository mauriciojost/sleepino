#!/usr/bin/env bash

set -e
#set -x

function run_test() {

  export main_src="$1"

  export flags="$2"

  export exclude="$3"

  export headers=$(find -L src -name "*.h" | xargs -I% dirname % | uniq | grep -v libs | grep -v test | grep -v unity | grep -v "$exclude" | xargs -I% echo "-I %")
  export src_c=$(find -L src -name "*.c" | grep -v test | grep -v unity | grep -v libs |  grep -v "$exclude"  | xargs -I% echo " %")
  export src_cpp=$(find -L src -name "*.cpp" | grep -v test | grep -v unity | grep -v libs | grep -v "$exclude" | xargs -I% echo " %")

  export headers_unity="-I libs/Unity/src"
  export src_unity="libs/Unity/src/*.c"

  #echo "HEADERS: $headers"
  #echo "SOURCES C: $src_c"
  #echo "SOURCES C++: $src_cpp"
  
  rm -f ./tester.bin
  GCOV="-fprofile-arcs -ftest-coverage -fPIC -O0"

  cmd_l="g++ $GCOV -Wno-deprecated-declarations -g -ggdb -o tester.bin $flags "$PLATFORMIO_BUILD_FLAGS" $src_c $src_cpp $src_unity $main_src $headers -I src $headers_unity"
  $cmd_l 

  ./tester.bin
  #cgdb tester.bin

  rm ./tester.bin
}


source mavarduino.conf

test_setup # must be present in mavarduino.conf

if [ "$build_image" == "true" ]
then
  echo "### Testing a final project (not a library)"
  platformio run
fi

for f in $(find test -name *.cpp)
do
  echo ""
  echo ""
  echo "### Running test $f"
  echo ""
  echo ""
  run_test "$f" "$test_general_flags" "$test_excludes_pattern"
done

# if gcovr is installed
if [ -f "/usr/local/bin/gcovr" ]
then
  echo "### Preparing gcovr reports"
  export report_xml=coverage.xml
  gcovr -r . --xml --xml-pretty --exclude 'libs/.*' --exclude 'test/.*' --delete > $report_xml
  readlink -e $report_xml
  rm -f *.gcno
fi

echo "### Done"
  



